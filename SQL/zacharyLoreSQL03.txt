1. /*List the first name, last name and phone number for all students that registered on 2/13/2007. Arrange the list in order of last name and first name.*/
SELECT first_Name, last_Name, phone
FROM Student
WHERE registration_Date = '13-FEB-07'
ORDER BY last_Name, first_Name;

2. /*List course number, section ID and start date for all sections located in L509. 
Arrange by start date*/
SELECT course_No, section_Id, start_Date_Time
FROM Section
WHERE location = 'L509'
ORDER BY start_Date_Time;

3. /*List the course number, section ID, start date, instructor ID and capacity for all courses with a start date in July 2007. Arrange the list by start date and course number.*/
SELECT course_No, section_Id, start_Date_Time, instructor_Id, capacity
FROM Section
WHERE start_Date_Time LIKE '%JUL-07'
ORDER BY start_Date_Time, course_No;

4. /*List Student ID, Section ID and final grade for all students who have a final grade and enrolled in January 2007.*/
SELECT student_Id, section_Id, final_Grade
FROM Enrollment
WHERE enroll_Date LIKE '%JAN-07'
AND final_Grade IS NOT NULL;

5. /*Create a query using the Oracle Dual Table that returns the date of the end of the semester for courses that begin on January 11, 2016. The semester is 109 days long.*/
SELECT TO_DATE('11-JAN-16') + 109 AS SEMESTER_END_DATE
FROM Dual;

6. /*Provide a list of course numbers and locations for sections being taught in the even numbered rooms located in building L.*/
SELECT course_No, location
FROM Section
WHERE location LIKE 'L%'
AND ( 
	   SUBSTR(location, -1) = 0
	OR SUBSTR(location, -1) = 2
	OR SUBSTR(location, -1) = 4
	OR SUBSTR(location, -1) = 6
	OR SUBSTR(location, -1) = 8
	);

7. /*Provide a list of Students in zip code 11368 that registered 3 or more days after their student record was created.*/
SELECT last_Name, first_Name
FROM Student
WHERE zip = '11368'
AND registration_Date - created_Date = 3;

8. /*Create a list of student names along with the number of years since they enrolled (round to 2 decimal places) for those students from area code 212. Sort the list on the number of years from highest to lowest. Note that your years may not exactly match my numbers depending on when you ran your query compared to when I ran mine*/
SELECT first_Name, last_Name, TO_CHAR((SYSDATE - registration_Date)/365, 9.99) AS "Years"
FROM Student
WHERE SUBSTR(phone, 1, 3) = 212
ORDER BY "Years" DESC;

9. /*Create a list of starting times for all course sections. Eliminate duplicates .*/
SELECT DISTINCT TO_CHAR(start_Date_Time, 'HH:MI') AS "START"
FROM Section
ORDER BY "START";

10. /*List the Student ID, Section ID and time enrolled for all students who enrolled at 10:19am. Arrange the list by student ID*/
SELECT student_Id, section_Id, TO_CHAR(enroll_Date, 'HH:MI') AS "ENROLL_TIME"
FROM Enrollment
WHERE TO_CHAR(enroll_Date, 'HH:MI') = '10:19'
ORDER BY student_Id;


